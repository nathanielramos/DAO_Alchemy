# A composition of services that are needed to run Alchemy
# This is for DEVELOPMENT, not production

version: "3"
services:
  alchemy:
    build:
      dockerfile: Dockerfile
      context: .
    links:
      # - ganache
      - alchemy-server
      - subgraph
    working_dir: /alchemy/
    volumes:
      # - .:/alchemy
      - ./src:/alchemy/src
      - ./scripts:/alchemy/scripts
      - ./test:/alchemy/test
      - ./package.json:/alchemy/package.json
      - ./package-lock.json:/alchemy/package-lock.json
      - ./webpack.base.config.js:/alchemy/webpack.base.config.js
      - ./app.json:/alchemy/app.json
      - ./webpack.dev.config.js:/alchemy/webpack.dev.config.js
      - ./webpack.docker.config.js:/alchemy/webpack.docker.config.js
      - ./entry.sh:/entry.sh
    ports:
      - 3000:3000

  alchemy-server:
    build:
      context: ./docker/alchemy-server
    depends_on:
      - postgres4alchemyserver
    links:
      - postgres4alchemyserver
    ports:
      - 3001:3001
    working_dir: /alchemy-server/
    environment:
      WAIT_HOSTS: postgres4alchemyserver:5432

  postgres4alchemyserver:
    build:
      context: ./docker/postgres/
    ports:
      - 5433:5432
      
  subgraph:
    build:
      context: ./node_modules/@daostack/subgraph
    links:
      - ipfs
      - graph-node
      - ganache
    environment:
      ethereum: http://ganache:8545
      test_mnemonic: myth like bonus scare over problem client lizard pioneer submit female collect
      node_http: http://graph-node:8000/by-name/daostack/graphql
      node_ws: http://graph-node:8001/by-name/daostack
      node_rpc: http://graph-node:8020
      ipfs_host: ipfs
      ipfs_port: 5001
      WAIT_HOSTS: ipfs:5001, graph-node:8020

  graph-node:
    image: graphprotocol/graph-node:v0.4.1
    ports:
      - 8000:8000
      - 8001:8001
      - 8020:8020
    links:
      - ipfs
      - postgres4graphnode
      - ganache
    environment:
      postgres_host: postgres4graphnode:5432
      postgres_user: postgres
      postgres_pass: 'letmein'
      postgres_db: postgres
      ipfs: ipfs:5001
      ethereum: development:http://ganache:8545

  ipfs:
    image: ipfs/go-ipfs
    ports:
      - 5001:5001
  postgres4graphnode:
    image: postgres
    ports:
      - 5435:5432
    environment:
      POSTGRES_PASSWORD: 'letmein'

  ganache:
    image: trufflesuite/ganache-cli:v6.2.1
    ports:
      - 8545:8545
    command: >
      --deterministic
      --gasLimit 8000000
      --networkId ganache
